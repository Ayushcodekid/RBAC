{"ast":null,"code":"var _jsxFileName = \"C:\\\\RBAC\\\\client\\\\src\\\\Pages\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst Chat = username => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const projectId = localStorage.getItem('selectedProject');\n  const userId = localStorage.getItem('userId');\n  useEffect(() => {\n    console.log('projectId:', projectId); // Log the projectId to verify it's being passed correctly\n    console.log('userId:', userId); // Log the userId to verify it's being passed correctly\n    if (projectId) {\n      socket.emit('joinProject', {\n        projectId\n      });\n    } else {\n      console.error('projectId is undefined or missing!');\n    }\n    socket.on('receiveMessage', data => {\n      console.log('Message received:', data);\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Fetch chat history on component mount\n    axios.get(`http://localhost:8000/api/chat/history/${projectId}`).then(response => {\n      setMessages(response.data.data);\n    }).catch(err => console.error('Error fetching chat history:', err));\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [projectId]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const newMessage = {\n      projectId,\n      senderId: userId,\n      senderName: username,\n      message\n    };\n\n    // Emit message via Socket.IO\n    socket.emit('sendMessage', newMessage);\n\n    // Optionally save message to the backend\n    axios.post('http://localhost:8000/api/chat/send', newMessage).catch(err => console.error('Error sending message:', err));\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.senderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), \": \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","jsxDEV","_jsxDEV","socket","Chat","username","_s","message","setMessage","messages","setMessages","projectId","localStorage","getItem","userId","console","log","emit","error","on","data","prevMessages","get","then","response","catch","err","off","handleSendMessage","e","preventDefault","newMessage","senderId","senderName","post","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/RBAC/client/src/Pages/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst Chat = (username) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n\r\n  const projectId = localStorage.getItem('selectedProject');\r\n  const userId = localStorage.getItem('userId');\r\n\r\n  useEffect(() => {\r\n    console.log('projectId:', projectId); // Log the projectId to verify it's being passed correctly\r\n  console.log('userId:', userId); // Log the userId to verify it's being passed correctly\r\n    if (projectId) {\r\n      socket.emit('joinProject', { projectId });\r\n    } else {\r\n      console.error('projectId is undefined or missing!');\r\n    }\r\n  \r\n    socket.on('receiveMessage', (data) => {\r\n      console.log('Message received:', data);\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n    });\r\n  \r\n    // Fetch chat history on component mount\r\n    axios.get(`http://localhost:8000/api/chat/history/${projectId}`)\r\n      .then((response) => {\r\n        setMessages(response.data.data);\r\n      })\r\n      .catch((err) => console.error('Error fetching chat history:', err));\r\n  \r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, [projectId]);\r\n  \r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newMessage = {\r\n      projectId,\r\n      senderId: userId,\r\n      senderName: username,\r\n      message\r\n    };\r\n\r\n    // Emit message via Socket.IO\r\n    socket.emit('sendMessage', newMessage);\r\n\r\n    // Optionally save message to the backend\r\n    axios.post('http://localhost:8000/api/chat/send', newMessage)\r\n      .catch((err) => console.error('Error sending message:', err));\r\n\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.senderName}</strong>: {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type a message\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMK,IAAI,GAAIC,QAAQ,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAG5C,MAAMc,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;EACzD,MAAMC,MAAM,GAAGF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7Cf,SAAS,CAAC,MAAM;IACdiB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEL,SAAS,CAAC,CAAC,CAAC;IACxCI,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC,CAAC,CAAC;IAC9B,IAAIH,SAAS,EAAE;MACbR,MAAM,CAACc,IAAI,CAAC,aAAa,EAAE;QAAEN;MAAU,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLI,OAAO,CAACG,KAAK,CAAC,oCAAoC,CAAC;IACrD;IAEAf,MAAM,CAACgB,EAAE,CAAC,gBAAgB,EAAGC,IAAI,IAAK;MACpCL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,IAAI,CAAC;MACtCV,WAAW,CAAEW,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,IAAI,CAAC,CAAC;IACxD,CAAC,CAAC;;IAEF;IACApB,KAAK,CAACsB,GAAG,CAAC,0CAA0CX,SAAS,EAAE,CAAC,CAC7DY,IAAI,CAAEC,QAAQ,IAAK;MAClBd,WAAW,CAACc,QAAQ,CAACJ,IAAI,CAACA,IAAI,CAAC;IACjC,CAAC,CAAC,CACDK,KAAK,CAAEC,GAAG,IAAKX,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEQ,GAAG,CAAC,CAAC;IAErE,OAAO,MAAM;MACXvB,MAAM,CAACwB,GAAG,CAAC,gBAAgB,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,CAAChB,SAAS,CAAC,CAAC;EAGf,MAAMiB,iBAAiB,GAAIC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,UAAU,GAAG;MACjBpB,SAAS;MACTqB,QAAQ,EAAElB,MAAM;MAChBmB,UAAU,EAAE5B,QAAQ;MACpBE;IACF,CAAC;;IAED;IACAJ,MAAM,CAACc,IAAI,CAAC,aAAa,EAAEc,UAAU,CAAC;;IAEtC;IACA/B,KAAK,CAACkC,IAAI,CAAC,qCAAqC,EAAEH,UAAU,CAAC,CAC1DN,KAAK,CAAEC,GAAG,IAAKX,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEQ,GAAG,CAAC,CAAC;IAE/DlB,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEN,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EACG1B,QAAQ,CAAC2B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBpC,OAAA;QAAAiC,QAAA,gBACEjC,OAAA;UAAAiC,QAAA,EAASE,GAAG,CAACJ;QAAU;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACL,GAAG,CAAC9B,OAAO;MAAA,GADvC+B,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxC,OAAA;MAAMyC,QAAQ,EAAEf,iBAAkB;MAAAO,QAAA,gBAChCjC,OAAA;QACE0C,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEtC,OAAQ;QACfuC,QAAQ,EAAGjB,CAAC,IAAKrB,UAAU,CAACqB,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC5CG,WAAW,EAAC;MAAgB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACFxC,OAAA;QAAQ0C,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACpC,EAAA,CA3EIF,IAAI;AAAA6C,EAAA,GAAJ7C,IAAI;AA6EV,eAAeA,IAAI;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}