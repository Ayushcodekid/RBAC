{"ast":null,"code":"var _jsxFileName = \"C:\\\\RBAC_APP\\\\client\\\\src\\\\Pages\\\\Doc\\\\document.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './document.css';\nimport api from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Document = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [projectId, setProjectId] = useState(''); // This should be set when a project is selected\n  const [selectedProject, setSelectedProject] = useState(null);\n  useEffect(() => {\n    const storedProject = localStorage.getItem('selectedProject');\n    if (storedProject) {\n      setSelectedProject(JSON.parse(storedProject));\n    } else {\n      alert(\"No project selected\");\n    }\n  }, []);\n  const handleFileChange = event => {\n    const selectedFiles = Array.from(event.target.files);\n    setFiles(selectedFiles);\n  };\n  const handleFileUpload = async event => {\n    event.preventDefault();\n    if (!selectedProject) {\n      alert('No project selected');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('projectId', selectedProject._id);\n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    try {\n      const token = localStorage.getItem('token');\n      const response = await api.post('/projects/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Files uploaded successfully:', response.data);\n      alert('Files uploaded successfully!');\n      setFiles([]); // Clear the file input after successful upload\n    } catch (error) {\n      console.error('Error uploading files:', error);\n      alert('Error uploading files. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"folder-box-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), selectedProject ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"folder-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileChange,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        className: \"upload-button\",\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Uploaded Files:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: file.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No project selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Document, \"npvZHMMGZAJES031RuEFhksWLBU=\");\n_c = Document;\nexport default Document;\nvar _c;\n$RefreshReg$(_c, \"Document\");","map":{"version":3,"names":["React","useState","useEffect","api","jsxDEV","_jsxDEV","Document","_s","files","setFiles","projectId","setProjectId","selectedProject","setSelectedProject","storedProject","localStorage","getItem","JSON","parse","alert","handleFileChange","event","selectedFiles","Array","from","target","handleFileUpload","preventDefault","formData","FormData","append","_id","forEach","file","token","response","post","headers","Authorization","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","onClick","length","map","index","name","_c","$RefreshReg$"],"sources":["C:/RBAC_APP/client/src/Pages/Doc/document.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './document.css';\r\nimport api from '../../api';\r\n\r\nconst Document = () => {\r\n    const [files, setFiles] = useState([]);\r\n    const [projectId, setProjectId] = useState(''); // This should be set when a project is selected\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const storedProject = localStorage.getItem('selectedProject')\r\n        if (storedProject) {\r\n            setSelectedProject(JSON.parse(storedProject))\r\n        }\r\n        else {\r\n            alert(\"No project selected\")\r\n        }\r\n    }, []);\r\n\r\n    const handleFileChange = (event) => {\r\n        const selectedFiles = Array.from(event.target.files);\r\n        setFiles(selectedFiles);\r\n    };\r\n\r\n    const handleFileUpload = async (event) => {\r\n        event.preventDefault();\r\n        if (!selectedProject) {\r\n            alert('No project selected');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('projectId', selectedProject._id);\r\n        files.forEach(file => {\r\n            formData.append('files', file);\r\n        });\r\n\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await api.post('/projects/upload', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            });\r\n            console.log('Files uploaded successfully:', response.data);\r\n            alert('Files uploaded successfully!');\r\n            setFiles([]); // Clear the file input after successful upload\r\n        } catch (error) {\r\n            console.error('Error uploading files:', error);\r\n            alert('Error uploading files. Please try again.');\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"folder-box-container\">\r\n            <h2>Upload Files</h2>\r\n            {selectedProject ? (\r\n                <div className=\"folder-box\">\r\n                    <input\r\n                        type=\"file\"\r\n                        multiple\r\n                        onChange={handleFileChange}\r\n                        className=\"file-input\"\r\n                    />\r\n                    <button onClick={handleFileUpload} className=\"upload-button\">\r\n                        Upload Files\r\n                    </button>\r\n                    {files.length > 0 && (\r\n                        <div className=\"file-box\">\r\n                            <h3>Uploaded Files:</h3>\r\n                            <ul>\r\n                                {files.map((file, index) => (\r\n                                    <li key={index}>{file.name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            ) : (\r\n                <p>No project selected</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Document;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}