{"ast":null,"code":"var _jsxFileName = \"C:\\\\TodoApp Backend\\\\client\\\\src\\\\Pages\\\\Auth\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { login } from \"../../auth\";\nimport api from \"../../api\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [foomData, setformData] = useState({\n    username: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setformData({\n      ...fromData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDeafault();\n    console.log(\"Form Data:\", formData);\n    try {\n      const response = await api.post('/login', fromData);\n      console.log(\"API Response:\", response); // Log API response for debugging\n\n      login(response.data.token);\n      alert(response.data.message);\n      navigate('/todo');\n    } catch (err) {\n      console.log(\"Error:\", err); // Log the error for debugging\n\n      alert(err.response.data.message || \"Login failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"B8kUkYbSLQNMErHi7xi+KH97GPo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","login","api","useNavigate","jsxDEV","_jsxDEV","Login","_s","foomData","setformData","username","password","navigate","handleChange","e","fromData","target","name","value","handleSubmit","preventDeafault","console","log","formData","response","post","data","token","alert","message","err","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/TodoApp Backend/client/src/Pages/Auth/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { login } from \"../../auth\";\r\nimport api from \"../../api\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Login =() =>{\r\n\r\nconst [foomData, setformData]= useState({\r\n    username: '',\r\n    password:''\r\n})\r\n\r\nconst navigate = useNavigate();\r\n\r\n\r\n\r\nconst handleChange= (e)=>{\r\n    setformData({\r\n        ...fromData, \r\n        [e.target.name]: e.target.value\r\n    })\r\n}\r\n\r\n\r\nconst handleSubmit = async(e) =>{\r\n\r\n    e.preventDeafault();\r\n\r\n    console.log(\"Form Data:\", formData);\r\n\r\n    try{\r\n        const response= await api.post('/login', fromData);\r\n        console.log(\"API Response:\", response); // Log API response for debugging\r\n\r\n        login(response.data.token)\r\n        alert(response.data.message)\r\n        navigate('/todo'); \r\n\r\n    }\r\n\r\n    catch(err){\r\n        console.log(\"Error:\", err); // Log the error for debugging\r\n\r\n        alert(err.response.data.message || \"Login failed\")\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} required />\r\n    <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} required />\r\n    <button type=\"submit\">Login</button>\r\n  </form>\r\n);\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,YAAY;AAClC,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,MAAMC,KAAK,GAAEA,CAAA,KAAK;EAAAC,EAAA;EAElB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAET,QAAQ,CAAC;IACpCU,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAC;EACb,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAI9B,MAAMU,YAAY,GAAGC,CAAC,IAAG;IACrBL,WAAW,CAAC;MACR,GAAGM,QAAQ;MACX,CAACD,CAAC,CAACE,MAAM,CAACC,IAAI,GAAGH,CAAC,CAACE,MAAM,CAACE;IAC9B,CAAC,CAAC;EACN,CAAC;EAGD,MAAMC,YAAY,GAAG,MAAML,CAAC,IAAI;IAE5BA,CAAC,CAACM,eAAe,CAAC,CAAC;IAEnBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEC,QAAQ,CAAC;IAEnC,IAAG;MACC,MAAMC,QAAQ,GAAE,MAAMtB,GAAG,CAACuB,IAAI,CAAC,QAAQ,EAAEV,QAAQ,CAAC;MAClDM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEE,QAAQ,CAAC,CAAC,CAAC;;MAExCvB,KAAK,CAACuB,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAC1BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,CAAC;MAC5BjB,QAAQ,CAAC,OAAO,CAAC;IAErB,CAAC,CAED,OAAMkB,GAAG,EAAC;MACNT,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEQ,GAAG,CAAC,CAAC,CAAC;;MAE5BF,KAAK,CAACE,GAAG,CAACN,QAAQ,CAACE,IAAI,CAACG,OAAO,IAAI,cAAc,CAAC;IACtD;EACJ,CAAC;EAKC,oBACExB,OAAA;IAAM0B,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC7B3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAAChB,IAAI,EAAC,UAAU;MAACiB,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEtB,YAAa;MAACuB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7FnC,OAAA;MAAO4B,IAAI,EAAC,UAAU;MAAChB,IAAI,EAAC,UAAU;MAACiB,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAEtB,YAAa;MAACuB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjGnC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAET,CAAC;AAACjC,EAAA,CApDID,KAAK;EAAA,QAOMH,WAAW;AAAA;AAAAsC,EAAA,GAPtBnC,KAAK;AAsDX,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}