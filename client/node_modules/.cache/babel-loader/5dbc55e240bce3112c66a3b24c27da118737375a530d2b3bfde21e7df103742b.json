{"ast":null,"code":"var _jsxFileName = \"C:\\\\RBAC\\\\client\\\\src\\\\Pages\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import io from 'socket.io-client';\n// import axios from 'axios';\n\n// const socket = io('http://localhost:8000');\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n\n//   const projectId = localStorage.getItem('selectedProject');\n//   const userId = localStorage.getItem('userId');\n//   const username = localStorage.getItem('username');\n\n//   useEffect(() => {\n//     console.log('projectId:', projectId); // Log the projectId to verify it's being passed correctly\n//   console.log('userId:', userId); // Log the userId to verify it's being passed correctly\n//     if (projectId) {\n//       socket.emit('joinProject', { projectId });\n//     } else {\n//       console.error('projectId is undefined or missing!');\n//     }\n\n//     socket.on('receiveMessage', (data) => {\n//       console.log('Message received:', data);\n//       setMessages((prevMessages) => [...prevMessages, data]);\n//     });\n\n//     // Fetch chat history on component mount\n//     axios.get(`http://localhost:8000/api/chat/history/${projectId}`)\n//       .then((response) => {\n//         setMessages(response.data.data);\n//       })\n//       .catch((err) => console.error('Error fetching chat history:', err));\n\n//     return () => {\n//       socket.off('receiveMessage');\n//     };\n//   }, [projectId]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n\n//     const newMessage = {\n//       projectId,\n//       senderId: userId,\n//       senderName: username,\n//       message\n//     };\n\n//     // Emit message via Socket.IO\n//     socket.emit('sendMessage', newMessage);\n\n//     // Optionally save message to the backend\n//     axios.post('http://localhost:8000/api/chat/send', newMessage)\n//       .catch((err) => console.error('Error sending message:', err));\n\n//     setMessage('');\n//   };\n\n//   return (\n//     <div>\n//       <div>\n//         {messages.map((msg, index) => (\n//           <div key={index}>\n//             <strong>{msg.senderName}</strong>: {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleSendMessage}>\n//         <input\n//           type=\"text\"\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//           placeholder=\"Type a message\"\n//         />\n//         <button type=\"submit\">Send</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { Box, Tab, Tabs, TextField, Button, List, ListItem, ListItemText, Typography, AppBar, Toolbar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000'); // Update the server URL if necessary\n\nconst Chat = ({\n  userId,\n  username\n}) => {\n  _s();\n  const [projects, setProjects] = useState([]); // List of projects (Tabs)\n  const [selectedProject, setSelectedProject] = useState(null); // The currently selected project\n  const [messages, setMessages] = useState([]); // Messages of the selected project\n  const [message, setMessage] = useState(''); // Input message\n\n  useEffect(() => {\n    // Fetch projects for the user (replace with your API call)\n    axios.get('http://localhost:8000/api/projects') // Update the API endpoint if necessary\n    .then(response => {\n      setProjects(response.data); // Assuming response contains an array of projects\n    }).catch(error => console.error('Error fetching projects:', error));\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', data => {\n      if (data.projectId === selectedProject) {\n        setMessages(prevMessages => [...prevMessages, data]);\n      }\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [selectedProject]);\n\n  // Handle tab change (project selection)\n  const handleTabChange = (event, newValue) => {\n    setSelectedProject(newValue);\n    // Fetch chat history when a new project is selected\n    axios.get(`http://localhost:8000/api/chat/history/${newValue}`).then(response => {\n      setMessages(response.data.data);\n    }).catch(error => console.error('Error fetching chat history:', error));\n  };\n\n  // Handle sending a message\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!message) return; // Don't send empty messages\n\n    const newMessage = {\n      projectId: selectedProject,\n      senderId: userId,\n      senderName: username,\n      message\n    };\n\n    // Emit message via Socket.IO\n    socket.emit('sendMessage', newMessage);\n\n    // Optionally save message to the backend\n    axios.post('http://localhost:8000/api/chat/send', newMessage).catch(err => console.error('Error sending message:', err));\n    setMessage(''); // Clear input field after sending message\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      height: '100vh',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"sticky\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Project Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '250px',\n          borderRight: 1,\n          borderColor: 'divider'\n        },\n        children: /*#__PURE__*/_jsxDEV(Tabs, {\n          orientation: \"vertical\",\n          value: selectedProject,\n          onChange: handleTabChange,\n          \"aria-label\": \"Project Tabs\",\n          variant: \"scrollable\",\n          sx: {\n            minHeight: '100%'\n          },\n          children: projects.map(project => /*#__PURE__*/_jsxDEV(Tab, {\n            label: project.name,\n            value: project.id\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1,\n          padding: 2\n        },\n        children: selectedProject ? /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(List, {\n            sx: {\n              flexGrow: 1,\n              overflowY: 'auto',\n              paddingBottom: '20px'\n            },\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: msg.senderName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 32\n                }, this),\n                secondary: msg.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              paddingTop: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              value: message,\n              onChange: e => setMessage(e.target.value),\n              placeholder: \"Type a message\",\n              variant: \"outlined\",\n              size: \"small\",\n              sx: {\n                marginRight: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleSendMessage,\n              size: \"small\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Select a project to start chatting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"RmWhmbIUFi2nLqFjD3as5NOnd+Y=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","Box","Tab","Tabs","TextField","Button","List","ListItem","ListItemText","Typography","AppBar","Toolbar","jsxDEV","_jsxDEV","socket","Chat","userId","username","_s","projects","setProjects","selectedProject","setSelectedProject","messages","setMessages","message","setMessage","get","then","response","data","catch","error","console","on","projectId","prevMessages","off","handleTabChange","event","newValue","handleSendMessage","e","preventDefault","newMessage","senderId","senderName","emit","post","err","sx","width","height","display","flexDirection","children","position","variant","fileName","_jsxFileName","lineNumber","columnNumber","borderRight","borderColor","orientation","value","onChange","minHeight","map","project","label","name","id","flexGrow","padding","overflowY","paddingBottom","msg","index","primary","secondary","alignItems","paddingTop","fullWidth","target","placeholder","size","marginRight","onClick","_c","$RefreshReg$"],"sources":["C:/RBAC/client/src/Pages/Chat/Chat.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import io from 'socket.io-client';\r\n// import axios from 'axios';\r\n\r\n// const socket = io('http://localhost:8000');\r\n\r\n// const Chat = () => {\r\n//   const [message, setMessage] = useState('');\r\n//   const [messages, setMessages] = useState([]);\r\n\r\n\r\n//   const projectId = localStorage.getItem('selectedProject');\r\n//   const userId = localStorage.getItem('userId');\r\n//   const username = localStorage.getItem('username');\r\n\r\n//   useEffect(() => {\r\n//     console.log('projectId:', projectId); // Log the projectId to verify it's being passed correctly\r\n//   console.log('userId:', userId); // Log the userId to verify it's being passed correctly\r\n//     if (projectId) {\r\n//       socket.emit('joinProject', { projectId });\r\n//     } else {\r\n//       console.error('projectId is undefined or missing!');\r\n//     }\r\n  \r\n//     socket.on('receiveMessage', (data) => {\r\n//       console.log('Message received:', data);\r\n//       setMessages((prevMessages) => [...prevMessages, data]);\r\n//     });\r\n  \r\n//     // Fetch chat history on component mount\r\n//     axios.get(`http://localhost:8000/api/chat/history/${projectId}`)\r\n//       .then((response) => {\r\n//         setMessages(response.data.data);\r\n//       })\r\n//       .catch((err) => console.error('Error fetching chat history:', err));\r\n  \r\n//     return () => {\r\n//       socket.off('receiveMessage');\r\n//     };\r\n//   }, [projectId]);\r\n  \r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const newMessage = {\r\n//       projectId,\r\n//       senderId: userId,\r\n//       senderName: username,\r\n//       message\r\n//     };\r\n\r\n//     // Emit message via Socket.IO\r\n//     socket.emit('sendMessage', newMessage);\r\n\r\n//     // Optionally save message to the backend\r\n//     axios.post('http://localhost:8000/api/chat/send', newMessage)\r\n//       .catch((err) => console.error('Error sending message:', err));\r\n\r\n//     setMessage('');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         {messages.map((msg, index) => (\r\n//           <div key={index}>\r\n//             <strong>{msg.senderName}</strong>: {msg.message}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <form onSubmit={handleSendMessage}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={message}\r\n//           onChange={(e) => setMessage(e.target.value)}\r\n//           placeholder=\"Type a message\"\r\n//         />\r\n//         <button type=\"submit\">Send</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport { Box, Tab, Tabs, TextField, Button, List, ListItem, ListItemText, Typography, AppBar, Toolbar } from '@mui/material';\r\n\r\nconst socket = io('http://localhost:8000'); // Update the server URL if necessary\r\n\r\nconst Chat = ({ userId, username }) => {\r\n  const [projects, setProjects] = useState([]); // List of projects (Tabs)\r\n  const [selectedProject, setSelectedProject] = useState(null); // The currently selected project\r\n  const [messages, setMessages] = useState([]); // Messages of the selected project\r\n  const [message, setMessage] = useState(''); // Input message\r\n\r\n  useEffect(() => {\r\n    // Fetch projects for the user (replace with your API call)\r\n    axios.get('http://localhost:8000/api/projects') // Update the API endpoint if necessary\r\n      .then((response) => {\r\n        setProjects(response.data); // Assuming response contains an array of projects\r\n      })\r\n      .catch((error) => console.error('Error fetching projects:', error));\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (data) => {\r\n      if (data.projectId === selectedProject) {\r\n        setMessages((prevMessages) => [...prevMessages, data]);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, [selectedProject]);\r\n\r\n  // Handle tab change (project selection)\r\n  const handleTabChange = (event, newValue) => {\r\n    setSelectedProject(newValue);\r\n    // Fetch chat history when a new project is selected\r\n    axios.get(`http://localhost:8000/api/chat/history/${newValue}`)\r\n      .then((response) => {\r\n        setMessages(response.data.data);\r\n      })\r\n      .catch((error) => console.error('Error fetching chat history:', error));\r\n  };\r\n\r\n  // Handle sending a message\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!message) return; // Don't send empty messages\r\n\r\n    const newMessage = {\r\n      projectId: selectedProject,\r\n      senderId: userId,\r\n      senderName: username,\r\n      message\r\n    };\r\n\r\n    // Emit message via Socket.IO\r\n    socket.emit('sendMessage', newMessage);\r\n\r\n    // Optionally save message to the backend\r\n    axios.post('http://localhost:8000/api/chat/send', newMessage)\r\n      .catch((err) => console.error('Error sending message:', err));\r\n\r\n    setMessage(''); // Clear input field after sending message\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', height: '100vh', display: 'flex', flexDirection: 'column' }}>\r\n      <AppBar position=\"sticky\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">Project Chat</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n      <Box sx={{ display: 'flex', height: '100%' }}>\r\n        {/* Tabs for selecting projects */}\r\n        <Box sx={{ width: '250px', borderRight: 1, borderColor: 'divider' }}>\r\n          <Tabs\r\n            orientation=\"vertical\"\r\n            value={selectedProject}\r\n            onChange={handleTabChange}\r\n            aria-label=\"Project Tabs\"\r\n            variant=\"scrollable\"\r\n            sx={{ minHeight: '100%' }}\r\n          >\r\n            {projects.map((project) => (\r\n              <Tab key={project.id} label={project.name} value={project.id} />\r\n            ))}\r\n          </Tabs>\r\n        </Box>\r\n\r\n        {/* Chat window */}\r\n        <Box sx={{ flexGrow: 1, padding: 2 }}>\r\n          {selectedProject ? (\r\n            <Box sx={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\r\n              <List sx={{ flexGrow: 1, overflowY: 'auto', paddingBottom: '20px' }}>\r\n                {messages.map((msg, index) => (\r\n                  <ListItem key={index}>\r\n                    <ListItemText\r\n                      primary={<strong>{msg.senderName}</strong>}\r\n                      secondary={msg.message}\r\n                    />\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n\r\n              <Box sx={{ display: 'flex', alignItems: 'center', paddingTop: 1 }}>\r\n                <TextField\r\n                  fullWidth\r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  placeholder=\"Type a message\"\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  sx={{ marginRight: 1 }}\r\n                />\r\n                <Button variant=\"contained\" onClick={handleSendMessage} size=\"small\">\r\n                  Send\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          ) : (\r\n            <Typography variant=\"h6\">Select a project to start chatting</Typography>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}