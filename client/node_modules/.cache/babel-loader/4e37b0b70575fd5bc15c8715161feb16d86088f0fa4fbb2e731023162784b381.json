{"ast":null,"code":"var _jsxFileName = \"C:\\\\RBAC\\\\client\\\\src\\\\Pages\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import io from 'socket.io-client';\n// import axios from 'axios';\n\n// const socket = io('http://localhost:8000');\n\n// const Chat = () => {\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n\n//   const projectId = localStorage.getItem('selectedProject');\n//   const userId = localStorage.getItem('userId');\n//   const username = localStorage.getItem('username');\n\n//   useEffect(() => {\n//     console.log('projectId:', projectId); // Log the projectId to verify it's being passed correctly\n//   console.log('userId:', userId); // Log the userId to verify it's being passed correctly\n//     if (projectId) {\n//       socket.emit('joinProject', { projectId });\n//     } else {\n//       console.error('projectId is undefined or missing!');\n//     }\n\n//     socket.on('receiveMessage', (data) => {\n//       console.log('Message received:', data);\n//       setMessages((prevMessages) => [...prevMessages, data]);\n//     });\n\n//     // Fetch chat history on component mount\n//     axios.get(`http://localhost:8000/api/chat/history/${projectId}`)\n//       .then((response) => {\n//         setMessages(response.data.data);\n//       })\n//       .catch((err) => console.error('Error fetching chat history:', err));\n\n//     return () => {\n//       socket.off('receiveMessage');\n//     };\n//   }, [projectId]);\n\n//   const handleSendMessage = (e) => {\n//     e.preventDefault();\n\n//     const newMessage = {\n//       projectId,\n//       senderId: userId,\n//       senderName: username,\n//       message\n//     };\n\n//     // Emit message via Socket.IO\n//     socket.emit('sendMessage', newMessage);\n\n//     // Optionally save message to the backend\n//     axios.post('http://localhost:8000/api/chat/send', newMessage)\n//       .catch((err) => console.error('Error sending message:', err));\n\n//     setMessage('');\n//   };\n\n//   return (\n//     <div>\n//       <div>\n//         {messages.map((msg, index) => (\n//           <div key={index}>\n//             <strong>{msg.senderName}</strong>: {msg.message}\n//           </div>\n//         ))}\n//       </div>\n//       <form onSubmit={handleSendMessage}>\n//         <input\n//           type=\"text\"\n//           value={message}\n//           onChange={(e) => setMessage(e.target.value)}\n//           placeholder=\"Type a message\"\n//         />\n//         <button type=\"submit\">Send</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Chat;\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [isChatOpen, setIsChatOpen] = useState(true); // Controls popup visibility\n\n  const projectId = localStorage.getItem('selectedProject');\n  const userId = localStorage.getItem('userId');\n  const username = localStorage.getItem('username');\n  useEffect(() => {\n    console.log('projectId:', projectId); // Log the projectId to verify it's being passed correctly\n    console.log('userId:', userId); // Log the userId to verify it's being passed correctly\n    if (projectId) {\n      socket.emit('joinProject', {\n        projectId\n      });\n    } else {\n      console.error('projectId is undefined or missing!');\n    }\n    socket.on('receiveMessage', data => {\n      console.log('Message received:', data);\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Fetch chat history on component mount\n    axios.get(`http://localhost:8000/api/chat/history/${projectId}`).then(response => {\n      setMessages(response.data.data);\n    }).catch(err => console.error('Error fetching chat history:', err));\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [projectId]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const newMessage = {\n      projectId,\n      senderId: userId,\n      senderName: username,\n      message\n    };\n\n    // Emit message via Socket.IO\n    socket.emit('sendMessage', newMessage);\n\n    // Optionally save message to the backend\n    axios.post('http://localhost:8000/api/chat/send', newMessage).catch(err => console.error('Error sending message:', err));\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '20px',\n      right: '20px',\n      width: isChatOpen ? '300px' : '50px',\n      height: isChatOpen ? '400px' : '50px',\n      backgroundColor: '#003534',\n      borderRadius: '10px',\n      overflow: 'hidden',\n      display: 'flex',\n      flexDirection: 'column',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n      transition: '0.3s ease'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#025E4C',\n        color: '#FFF',\n        padding: '10px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        cursor: 'pointer'\n      },\n      onClick: () => setIsChatOpen(!isChatOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: 0,\n          fontSize: '1rem'\n        },\n        children: \"Project Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: isChatOpen ? '▼' : '▲'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '10px',\n        overflowY: 'auto',\n        backgroundColor: '#002D2B'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: msg.senderId === userId ? 'flex-end' : 'flex-start',\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: '70%',\n            padding: '10px',\n            backgroundColor: msg.senderId === userId ? '#01796F' : '#013E3E',\n            color: '#FFF',\n            borderRadius: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0,\n              fontSize: '0.8rem',\n              opacity: 0.8\n            },\n            children: msg.senderName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: '5px 0'\n            },\n            children: msg.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this), isChatOpen && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      style: {\n        display: 'flex',\n        padding: '10px',\n        backgroundColor: '#013E3E',\n        borderTop: '1px solid #025E4C'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message here...\",\n        style: {\n          flex: 1,\n          padding: '10px',\n          border: 'none',\n          borderRadius: '5px',\n          marginRight: '10px',\n          outline: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '10px',\n          backgroundColor: '#01796F',\n          border: 'none',\n          color: '#FFF',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"h31s3yQoiwMFE3CzkuwbfaimxGY=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","jsxDEV","_jsxDEV","socket","Chat","_s","message","setMessage","messages","setMessages","isChatOpen","setIsChatOpen","projectId","localStorage","getItem","userId","username","console","log","emit","error","on","data","prevMessages","get","then","response","catch","err","off","handleSendMessage","e","preventDefault","newMessage","senderId","senderName","post","style","position","bottom","right","width","height","backgroundColor","borderRadius","overflow","display","flexDirection","boxShadow","transition","children","color","padding","justifyContent","alignItems","cursor","onClick","margin","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","flex","overflowY","map","msg","index","marginBottom","maxWidth","opacity","onSubmit","borderTop","type","value","onChange","target","placeholder","border","marginRight","outline","_c","$RefreshReg$"],"sources":["C:/RBAC/client/src/Pages/Chat/Chat.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import io from 'socket.io-client';\r\n// import axios from 'axios';\r\n\r\n// const socket = io('http://localhost:8000');\r\n\r\n// const Chat = () => {\r\n//   const [message, setMessage] = useState('');\r\n//   const [messages, setMessages] = useState([]);\r\n\r\n\r\n//   const projectId = localStorage.getItem('selectedProject');\r\n//   const userId = localStorage.getItem('userId');\r\n//   const username = localStorage.getItem('username');\r\n\r\n//   useEffect(() => {\r\n//     console.log('projectId:', projectId); // Log the projectId to verify it's being passed correctly\r\n//   console.log('userId:', userId); // Log the userId to verify it's being passed correctly\r\n//     if (projectId) {\r\n//       socket.emit('joinProject', { projectId });\r\n//     } else {\r\n//       console.error('projectId is undefined or missing!');\r\n//     }\r\n  \r\n//     socket.on('receiveMessage', (data) => {\r\n//       console.log('Message received:', data);\r\n//       setMessages((prevMessages) => [...prevMessages, data]);\r\n//     });\r\n  \r\n//     // Fetch chat history on component mount\r\n//     axios.get(`http://localhost:8000/api/chat/history/${projectId}`)\r\n//       .then((response) => {\r\n//         setMessages(response.data.data);\r\n//       })\r\n//       .catch((err) => console.error('Error fetching chat history:', err));\r\n  \r\n//     return () => {\r\n//       socket.off('receiveMessage');\r\n//     };\r\n//   }, [projectId]);\r\n  \r\n\r\n//   const handleSendMessage = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const newMessage = {\r\n//       projectId,\r\n//       senderId: userId,\r\n//       senderName: username,\r\n//       message\r\n//     };\r\n\r\n//     // Emit message via Socket.IO\r\n//     socket.emit('sendMessage', newMessage);\r\n\r\n//     // Optionally save message to the backend\r\n//     axios.post('http://localhost:8000/api/chat/send', newMessage)\r\n//       .catch((err) => console.error('Error sending message:', err));\r\n\r\n//     setMessage('');\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div>\r\n//         {messages.map((msg, index) => (\r\n//           <div key={index}>\r\n//             <strong>{msg.senderName}</strong>: {msg.message}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <form onSubmit={handleSendMessage}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={message}\r\n//           onChange={(e) => setMessage(e.target.value)}\r\n//           placeholder=\"Type a message\"\r\n//         />\r\n//         <button type=\"submit\">Send</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Chat;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst Chat = () => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [isChatOpen, setIsChatOpen] = useState(true); // Controls popup visibility\r\n\r\n  const projectId = localStorage.getItem('selectedProject');\r\n  const userId = localStorage.getItem('userId');\r\n  const username = localStorage.getItem('username');\r\n\r\n  useEffect(() => {\r\n    console.log('projectId:', projectId); // Log the projectId to verify it's being passed correctly\r\n    console.log('userId:', userId); // Log the userId to verify it's being passed correctly\r\n    if (projectId) {\r\n      socket.emit('joinProject', { projectId });\r\n    } else {\r\n      console.error('projectId is undefined or missing!');\r\n    }\r\n\r\n    socket.on('receiveMessage', (data) => {\r\n      console.log('Message received:', data);\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n    });\r\n\r\n    // Fetch chat history on component mount\r\n    axios\r\n      .get(`http://localhost:8000/api/chat/history/${projectId}`)\r\n      .then((response) => {\r\n        setMessages(response.data.data);\r\n      })\r\n      .catch((err) => console.error('Error fetching chat history:', err));\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, [projectId]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newMessage = {\r\n      projectId,\r\n      senderId: userId,\r\n      senderName: username,\r\n      message,\r\n    };\r\n\r\n    // Emit message via Socket.IO\r\n    socket.emit('sendMessage', newMessage);\r\n\r\n    // Optionally save message to the backend\r\n    axios\r\n      .post('http://localhost:8000/api/chat/send', newMessage)\r\n      .catch((err) => console.error('Error sending message:', err));\r\n\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'fixed',\r\n        bottom: '20px',\r\n        right: '20px',\r\n        width: isChatOpen ? '300px' : '50px',\r\n        height: isChatOpen ? '400px' : '50px',\r\n        backgroundColor: '#003534',\r\n        borderRadius: '10px',\r\n        overflow: 'hidden',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n        transition: '0.3s ease',\r\n      }}\r\n    >\r\n      {/* Header */}\r\n      <div\r\n        style={{\r\n          backgroundColor: '#025E4C',\r\n          color: '#FFF',\r\n          padding: '10px',\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          cursor: 'pointer',\r\n        }}\r\n        onClick={() => setIsChatOpen(!isChatOpen)}\r\n      >\r\n        <h3 style={{ margin: 0, fontSize: '1rem' }}>Project Chat</h3>\r\n        <span>{isChatOpen ? '▼' : '▲'}</span>\r\n      </div>\r\n\r\n      {/* Messages Area */}\r\n      {isChatOpen && (\r\n        <div\r\n          style={{\r\n            flex: 1,\r\n            padding: '10px',\r\n            overflowY: 'auto',\r\n            backgroundColor: '#002D2B',\r\n          }}\r\n        >\r\n          {messages.map((msg, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: msg.senderId === userId ? 'flex-end' : 'flex-start',\r\n                marginBottom: '10px',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  maxWidth: '70%',\r\n                  padding: '10px',\r\n                  backgroundColor: msg.senderId === userId ? '#01796F' : '#013E3E',\r\n                  color: '#FFF',\r\n                  borderRadius: '10px',\r\n                }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    margin: 0,\r\n                    fontSize: '0.8rem',\r\n                    opacity: 0.8,\r\n                  }}\r\n                >\r\n                  {msg.senderName}\r\n                </p>\r\n                <p style={{ margin: '5px 0' }}>{msg.message}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Input Area */}\r\n      {isChatOpen && (\r\n        <form\r\n          onSubmit={handleSendMessage}\r\n          style={{\r\n            display: 'flex',\r\n            padding: '10px',\r\n            backgroundColor: '#013E3E',\r\n            borderTop: '1px solid #025E4C',\r\n          }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            placeholder=\"Type your message here...\"\r\n            style={{\r\n              flex: 1,\r\n              padding: '10px',\r\n              border: 'none',\r\n              borderRadius: '5px',\r\n              marginRight: '10px',\r\n              outline: 'none',\r\n            }}\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              padding: '10px',\r\n              backgroundColor: '#01796F',\r\n              border: 'none',\r\n              color: '#FFF',\r\n              borderRadius: '5px',\r\n              cursor: 'pointer',\r\n            }}\r\n          >\r\n            ➤\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}