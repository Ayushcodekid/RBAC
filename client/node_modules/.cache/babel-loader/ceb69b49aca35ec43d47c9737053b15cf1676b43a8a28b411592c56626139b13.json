{"ast":null,"code":"var _jsxFileName = \"C:\\\\RBAC\\\\client\\\\src\\\\Pages\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst Chat = ({\n  projectId,\n  userId,\n  username\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    // Join the project chat room\n    socket.emit('joinProject', {\n      projectId\n    });\n\n    // Listen for incoming messages\n    socket.on('receiveMessage', data => {\n      setMessages(prevMessages => [...prevMessages, data]);\n    });\n\n    // Fetch chat history on component mount\n    axios.get(`http://localhost:8000/api/chat/history/${projectId}`).then(response => {\n      setMessages(response.data.data);\n    }).catch(err => console.error('Error fetching chat history:', err));\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, [projectId]);\n  const handleSendMessage = e => {\n    e.preventDefault();\n    const newMessage = {\n      projectId,\n      senderId: userId,\n      senderName: username,\n      message\n    };\n\n    // Emit message via Socket.IO\n    socket.emit('sendMessage', newMessage);\n\n    // Optionally save message to the backend\n    axios.post('http://localhost:8000/api/chat/send', newMessage).catch(err => console.error('Error sending message:', err));\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.senderName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), \": \", msg.message]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"WDgp24k/FdZO6Mwa4GS0i45C6ek=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","io","axios","jsxDEV","_jsxDEV","socket","Chat","projectId","userId","username","_s","message","setMessage","messages","setMessages","emit","on","data","prevMessages","get","then","response","catch","err","console","error","off","handleSendMessage","e","preventDefault","newMessage","senderId","senderName","post","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/RBAC/client/src/Pages/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst Chat = ({ projectId, userId, username }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Join the project chat room\r\n    socket.emit('joinProject', { projectId });\r\n\r\n    // Listen for incoming messages\r\n    socket.on('receiveMessage', (data) => {\r\n      setMessages((prevMessages) => [...prevMessages, data]);\r\n    });\r\n\r\n    // Fetch chat history on component mount\r\n    axios.get(`http://localhost:8000/api/chat/history/${projectId}`)\r\n      .then((response) => {\r\n        setMessages(response.data.data);\r\n      })\r\n      .catch((err) => console.error('Error fetching chat history:', err));\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, [projectId]);\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    const newMessage = {\r\n      projectId,\r\n      senderId: userId,\r\n      senderName: username,\r\n      message\r\n    };\r\n\r\n    // Emit message via Socket.IO\r\n    socket.emit('sendMessage', newMessage);\r\n\r\n    // Optionally save message to the backend\r\n    axios.post('http://localhost:8000/api/chat/send', newMessage)\r\n      .catch((err) => console.error('Error sending message:', err));\r\n\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index}>\r\n            <strong>{msg.senderName}</strong>: {msg.message}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSendMessage}>\r\n        <input\r\n          type=\"text\"\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          placeholder=\"Type a message\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}