{"ast":null,"code":"var _jsxFileName = \"C:\\\\TodoApp Backend\\\\client\\\\src\\\\Pages\\\\Auth\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { login } from \"../../auth\";\nimport api from \"../../api\";\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setformData] = useState({\n    username: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setformData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Form Data:\", formData);\n    try {\n      const response = await api.post('/login', formData);\n      console.log(\"API Response:\", response); // Log API response for debugging\n\n      login(response.data.token);\n      alert(response.data.message || \"Login successfull\");\n      navigate('/todo');\n    } catch (err) {\n      console.log(\"Error:\", err); // Log the error for debugging\n\n      alert(err.response.data.message || \"Login failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        onChange: handleChange,\n        value: formData.username,\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        onChange: handleChange,\n        value: formData.password,\n        required: true,\n        className: \"login-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"wZtkYkLTwPbwUWePT9ZDahsAtZI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","login","api","useNavigate","jsxDEV","_jsxDEV","Login","_s","formData","setformData","username","password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","response","post","data","token","alert","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/TodoApp Backend/client/src/Pages/Auth/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { login } from \"../../auth\";\r\nimport api from \"../../api\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\n\r\n\r\nconst Login =() =>{\r\n\r\nconst [formData, setformData]= useState({\r\n    username: '',\r\n    password:''\r\n})\r\n\r\nconst navigate = useNavigate();\r\n\r\n\r\n\r\nconst handleChange= (e)=>{\r\n    setformData({\r\n        ...formData, \r\n        [e.target.name]: e.target.value\r\n    })\r\n}\r\n\r\n\r\nconst handleSubmit = async(e) =>{\r\n\r\n    e.preventDefault();\r\n\r\n    console.log(\"Form Data:\", formData);\r\n\r\n    try{\r\n        const response= await api.post('/login', formData);\r\n        console.log(\"API Response:\", response); // Log API response for debugging\r\n\r\n        login(response.data.token)\r\n        alert(response.data.message || \"Login successfull\")\r\n        navigate('/todo'); \r\n\r\n    }\r\n\r\n    catch(err){\r\n        console.log(\"Error:\", err); // Log the error for debugging\r\n\r\n        alert(err.response.data.message || \"Login failed\")\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n    <h2 className=\"login-title\">Login</h2>\r\n    <form className=\"login-form\" onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\" \r\n        name=\"username\" \r\n        placeholder=\"Username\" \r\n        onChange={handleChange} \r\n        value={formData.username} \r\n        required \r\n        className=\"login-input\"\r\n      />\r\n      <input \r\n        type=\"password\" \r\n        name=\"password\" \r\n        placeholder=\"Password\" \r\n        onChange={handleChange} \r\n        value={formData.password} \r\n        required \r\n        className=\"login-input\"\r\n      />\r\n      <button type=\"submit\" className=\"login-button\">Login</button>\r\n      <button type=\"submit\" className=\"login-button\">Register</button>\r\n\r\n    </form>\r\n  </div>\r\n);\r\n};\r\n\r\n\r\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,YAAY;AAClC,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIrB,MAAMC,KAAK,GAAEA,CAAA,KAAK;EAAAC,EAAA;EAElB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAET,QAAQ,CAAC;IACpCU,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAC;EACb,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAI9B,MAAMU,YAAY,GAAGC,CAAC,IAAG;IACrBL,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAC9B,CAAC,CAAC;EACN,CAAC;EAGD,MAAMC,YAAY,GAAG,MAAMJ,CAAC,IAAI;IAE5BA,CAAC,CAACK,cAAc,CAAC,CAAC;IAElBC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEb,QAAQ,CAAC;IAEnC,IAAG;MACC,MAAMc,QAAQ,GAAE,MAAMpB,GAAG,CAACqB,IAAI,CAAC,QAAQ,EAAEf,QAAQ,CAAC;MAClDY,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAAC,CAAC,CAAC;;MAExCrB,KAAK,CAACqB,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MAC1BC,KAAK,CAACJ,QAAQ,CAACE,IAAI,CAACG,OAAO,IAAI,mBAAmB,CAAC;MACnDf,QAAQ,CAAC,OAAO,CAAC;IAErB,CAAC,CAED,OAAMgB,GAAG,EAAC;MACNR,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEO,GAAG,CAAC,CAAC,CAAC;;MAE5BF,KAAK,CAACE,GAAG,CAACN,QAAQ,CAACE,IAAI,CAACG,OAAO,IAAI,cAAc,CAAC;IACtD;EACJ,CAAC;EAKC,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAChCzB,OAAA;MAAIwB,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtC7B,OAAA;MAAMwB,SAAS,EAAC,YAAY;MAACM,QAAQ,EAAEjB,YAAa;MAAAY,QAAA,gBAClDzB,OAAA;QACE+B,IAAI,EAAC,MAAM;QACXpB,IAAI,EAAC,UAAU;QACfqB,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAEzB,YAAa;QACvBI,KAAK,EAAET,QAAQ,CAACE,QAAS;QACzB6B,QAAQ;QACRV,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF7B,OAAA;QACE+B,IAAI,EAAC,UAAU;QACfpB,IAAI,EAAC,UAAU;QACfqB,WAAW,EAAC,UAAU;QACtBC,QAAQ,EAAEzB,YAAa;QACvBI,KAAK,EAAET,QAAQ,CAACG,QAAS;QACzB4B,QAAQ;QACRV,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7D7B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAER,CAAC;AAAC3B,EAAA,CAzEID,KAAK;EAAA,QAOMH,WAAW;AAAA;AAAAqC,EAAA,GAPtBlC,KAAK;AA4EX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}