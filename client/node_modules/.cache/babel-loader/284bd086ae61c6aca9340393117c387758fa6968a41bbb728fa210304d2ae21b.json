{"ast":null,"code":"var _jsxFileName = \"C:\\\\RBAC\\\\client\\\\src\\\\Pages\\\\Chat\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\n\n// Connect to the Socket.IO server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst ChatTabs = ({\n  projectId,\n  userId\n}) => {\n  _s();\n  const [tabs, setTabs] = useState([]);\n  const [currentTab, setCurrentTab] = useState(null);\n  const [messages, setMessages] = useState({});\n  const [newMessage, setNewMessage] = useState('');\n\n  // Join the project room when the component mounts\n  useEffect(() => {\n    if (projectId) {\n      socket.emit('joinProject', {\n        projectId,\n        userId\n      });\n    }\n  }, [projectId, userId]);\n\n  // Handle receiving messages\n  useEffect(() => {\n    socket.on('receiveMessage', message => {\n      const {\n        senderId,\n        projectId,\n        text\n      } = message;\n      setMessages(prev => ({\n        ...prev,\n        [projectId]: [...(prev[projectId] || []), {\n          senderId,\n          text\n        }]\n      }));\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, []);\n\n  // Add a new tab for chatting with another user\n  const openTab = otherUserId => {\n    if (!tabs.includes(otherUserId)) {\n      setTabs([...tabs, otherUserId]);\n      setCurrentTab(otherUserId);\n    }\n  };\n\n  // Handle sending a message\n  const sendMessage = () => {\n    if (newMessage.trim() && currentTab) {\n      const message = {\n        senderId: userId,\n        projectId,\n        text: newMessage\n      };\n      socket.emit('sendMessage', message);\n      setMessages(prev => ({\n        ...prev,\n        [projectId]: [...(prev[projectId] || []), message]\n      }));\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-tabs\",\n      children: [tabs.map((tab, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentTab(tab),\n        className: `chat-tab ${currentTab === tab ? 'active' : ''}`,\n        children: [\"User \", tab]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openTab(prompt('Enter User ID')),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: (messages[projectId] || []).map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.senderId === userId ? 'sent' : 'received'}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatTabs, \"fJXbEkT1Oh6WnJAukuh01Exq8s4=\");\n_c = ChatTabs;\nexport default ChatTabs;\nvar _c;\n$RefreshReg$(_c, \"ChatTabs\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","ChatTabs","projectId","userId","_s","tabs","setTabs","currentTab","setCurrentTab","messages","setMessages","newMessage","setNewMessage","emit","on","message","senderId","text","prev","off","openTab","otherUserId","includes","sendMessage","trim","className","children","map","tab","idx","onClick","fileName","_jsxFileName","lineNumber","columnNumber","prompt","msg","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/RBAC/client/src/Pages/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './Chat.css';\r\n\r\n// Connect to the Socket.IO server\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst ChatTabs = ({ projectId, userId }) => {\r\n  const [tabs, setTabs] = useState([]);\r\n  const [currentTab, setCurrentTab] = useState(null);\r\n  const [messages, setMessages] = useState({});\r\n  const [newMessage, setNewMessage] = useState('');\r\n\r\n  // Join the project room when the component mounts\r\n  useEffect(() => {\r\n    if (projectId) {\r\n      socket.emit('joinProject', { projectId, userId });\r\n    }\r\n  }, [projectId, userId]);\r\n\r\n  // Handle receiving messages\r\n  useEffect(() => {\r\n    socket.on('receiveMessage', (message) => {\r\n      const { senderId, projectId, text } = message;\r\n\r\n      setMessages((prev) => ({\r\n        ...prev,\r\n        [projectId]: [...(prev[projectId] || []), { senderId, text }]\r\n      }));\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receiveMessage');\r\n    };\r\n  }, []);\r\n\r\n  // Add a new tab for chatting with another user\r\n  const openTab = (otherUserId) => {\r\n    if (!tabs.includes(otherUserId)) {\r\n      setTabs([...tabs, otherUserId]);\r\n      setCurrentTab(otherUserId);\r\n    }\r\n  };\r\n\r\n  // Handle sending a message\r\n  const sendMessage = () => {\r\n    if (newMessage.trim() && currentTab) {\r\n      const message = {\r\n        senderId: userId,\r\n        projectId,\r\n        text: newMessage\r\n      };\r\n\r\n      socket.emit('sendMessage', message);\r\n\r\n      setMessages((prev) => ({\r\n        ...prev,\r\n        [projectId]: [...(prev[projectId] || []), message]\r\n      }));\r\n\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-tabs\">\r\n        {tabs.map((tab, idx) => (\r\n          <button\r\n            key={idx}\r\n            onClick={() => setCurrentTab(tab)}\r\n            className={`chat-tab ${currentTab === tab ? 'active' : ''}`}\r\n          >\r\n            User {tab}\r\n          </button>\r\n        ))}\r\n        <button onClick={() => openTab(prompt('Enter User ID'))}>+</button>\r\n      </div>\r\n\r\n      <div className=\"chat-window\">\r\n        <div className=\"chat-messages\">\r\n          {(messages[projectId] || []).map((msg, idx) => (\r\n            <div\r\n              key={idx}\r\n              className={`chat-message ${\r\n                msg.senderId === userId ? 'sent' : 'received'\r\n              }`}\r\n            >\r\n              <span>{msg.text}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n          />\r\n          <button onClick={sendMessage}>Send</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatTabs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}