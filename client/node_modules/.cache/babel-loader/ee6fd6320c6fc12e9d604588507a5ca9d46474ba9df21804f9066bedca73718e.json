{"ast":null,"code":"var _jsxFileName = \"C:\\\\RBAC_APP\\\\client\\\\src\\\\Pages\\\\Main\\\\Home.js\",\n  _s = $RefreshSig$();\n// import './Home.css';\n// import React, { useEffect, useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import api from '../../api';\n// import { IoIosDocument } from 'react-icons/io'\n\n// const Project = () => {\n//   const [projects, setProjects] = useState([]);\n//   const [formData, setFormData] = useState({ name: '', description: '' });\n//   const [showAddProject, setShowAddProject] = useState(false);\n//   const [selectedProjectId, setSelectedProjectId] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetchProjects();\n//   }, []);\n\n//   const handleAddClick = () => {\n//     setShowAddProject(true);\n//   };\n\n//   const fetchProjects = async () => {\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//       try {\n//         const response = await api.get('/projects', { headers: { Authorization: `Bearer ${token}` } });\n//         console.log('Fetched projects:', response); // Debug log\n//         setProjects(response.data);\n//       } catch (err) {\n//         console.error('Error fetching projects:', err);\n//         alert('Error fetching projects. Please try again later.');\n//       }\n//     } else {\n//       alert('You must be logged in to view projects.');\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const token = localStorage.getItem('token');\n//     if (token) {\n//         try {\n//             const decodedToken = decodeToken(token);\n//             const userId = decodedToken.userId;\n\n//             const response = await api.post('/projects', { ...formData, userId }, { headers: { Authorization: `Bearer ${token}` } });\n//             alert('Project added successfully!');\n//             setFormData({ name: '', description: '' });\n//             fetchProjects();\n\n//             // Store the new project ID in localStorage\n//             // const newProject = response.data;\n//             // localStorage.setItem('selectedProject', JSON.stringify(newProject));\n//         } catch (err) {\n//             console.error('Error adding project:', err);\n//             alert('Error adding project. Please check your input and try again.');\n//         }\n//     } else {\n//         alert('You must be logged in to add a project.');\n//     }\n// };\n\n//   // Function to decode the JWT token and extract userId\n//   const decodeToken = (token) => {\n//     // Ensure you handle token parsing securely\n//     const payload = token.split('.')[1];\n//     const decodedPayload = atob(payload);\n//     return JSON.parse(decodedPayload);\n//   };\n\n//   const handleSelectProject = (projectId) => {\n//     setSelectedProjectId(projectId);\n//     localStorage.setItem('selectedProject', projectId); // Store as string\n// };\n\n//   return (\n\n//     <div className='main'>\n\n//       <Link to=\"/projects/document\"><IoIosDocument className='doc-icon' /></Link>\n\n//       <div className=\"projects-container\">\n//         <div className=\"projects-header\">\n//           <h1>Projects</h1>\n//           <button className=\"add-project-button\" onClick={handleAddClick}>\n//             Add Project\n//           </button>\n//         </div>\n//         {showAddProject && (\n//           <div className=\"projects-form-container\">\n//             <form onSubmit={handleSubmit} className=\"project-form\">\n//               <input\n//                 type=\"text\"\n//                 name=\"name\"\n//                 placeholder=\"Project Name\"\n//                 onChange={handleChange}\n//                 value={formData.name}\n//                 required\n//               />\n//               <textarea\n//                 name=\"description\"\n//                 placeholder=\"Project Description\"\n//                 onChange={handleChange}\n//                 value={formData.description}\n//               />\n//               <div className=\"form-buttons\">\n//                 <button type=\"submit\">Create</button>\n//                 <button type=\"button\" onClick={() => setShowAddProject(false)}>Cancel</button>\n//               </div>\n//             </form>\n//           </div>\n//         )}\n//         <div className=\"project-list-container\">\n//           <h2>Project List</h2>\n//           <ul>\n//             {projects.length > 0 ? (\n//               projects.map((project) => (\n//                 <li key={project._id}\n//                   className={`project-item ${selectedProjectId === project._id ? 'selected' : ''}`}\n//                   onClick={() => handleSelectProject(project._id)}>\n//                   <h3>{project.name}, {project._id}</h3>\n//                   <p>{project.description}</p>\n\n//                 </li>\n//               ))\n//             ) : (\n//               <p>No projects found</p>\n//             )}\n//           </ul>\n//         </div>\n//       </div>\n//     </div>\n\n//   );\n// };\n\n// export default Project;\n\nimport './Home.css';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport api from '../../api';\nimport { IoIosDocument } from 'react-icons/io';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: ''\n  });\n  const [showAddProject, setShowAddProject] = useState(false);\n  const [showAddUser, setShowAddUser] = useState(false);\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\n  const [userData, setUserData] = useState({\n    username: '',\n    role: ''\n  });\n  const [currentUser, setCurrentUser] = useState(null); // For managing user information\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchProjects();\n    fetchCurrentUser();\n  }, []);\n  const fetchProjects = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await api.get('/projects', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setProjects(response.data);\n      } catch (err) {\n        console.error('Error fetching projects:', err);\n        alert('Error fetching projects. Please try again later.');\n      }\n    } else {\n      alert('You must be logged in to view projects.');\n    }\n  };\n  const fetchCurrentUser = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await api.get('/users/me', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setCurrentUser(response.data);\n      } catch (err) {\n        console.error('Error fetching user information:', err);\n      }\n    }\n  };\n  const handleAddClick = () => {\n    setShowAddProject(true);\n  };\n  const handleUserAddClick = () => {\n    setShowAddUser(true);\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleUserChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const response = await api.post('/projects', {\n          ...formData\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Project added successfully!');\n        setFormData({\n          name: '',\n          description: ''\n        });\n        fetchProjects();\n        setShowAddProject(false);\n      } catch (err) {\n        console.error('Error adding project:', err);\n        alert('Error adding project. Please check your input and try again.');\n      }\n    } else {\n      alert('You must be logged in to add a project.');\n    }\n  };\n  const handleUserSubmit = async e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    if (token && selectedProjectId) {\n      try {\n        const response = await api.post(`/projects/${selectedProjectId}/users`, {\n          username: userData.username,\n          role: userData.role\n        });\n        console.log('User added successfully:', response.data);\n        alert('User added to project successfully!');\n        setUserData({\n          username: '',\n          role: ''\n        });\n        fetchProjects();\n        setShowAddUser(false);\n        console.log('Submitting user data:', userData);\n      } catch (err) {\n        console.error('Error adding user to project:', err);\n        alert('Error adding user. Please check your input and try again.');\n      }\n    } else {\n      alert('You must be logged in and a project must be selected to add users.');\n    }\n  };\n  const handleSelectProject = projectId => {\n    setSelectedProjectId(projectId);\n    localStorage.setItem('selectedProject', projectId); // Store as string\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/projects/document\",\n      children: /*#__PURE__*/_jsxDEV(IoIosDocument, {\n        className: \"doc-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-project-button\",\n          onClick: handleAddClick,\n          children: \"Add Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-user-button\",\n          onClick: handleUserAddClick,\n          children: \"Add User to Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), showAddProject && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"project-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Project Name\",\n            onChange: handleChange,\n            value: formData.name,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"description\",\n            placeholder: \"Project Description\",\n            onChange: handleChange,\n            value: formData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowAddProject(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this), showAddUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-user-form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleUserSubmit,\n          className: \"user-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Username\",\n            onChange: handleUserChange,\n            value: userData.username,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"role\",\n            onChange: handleUserChange,\n            value: userData.role,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"editor\",\n              children: \"Editor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"viewer\",\n              children: \"Viewer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowAddUser(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-list-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Project List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: projects.length > 0 ? projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `project-item ${selectedProjectId === project._id ? 'selected' : ''}`,\n            onClick: () => handleSelectProject(project._id),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: project.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Users: \", project.users.map(user => `${user.username} (${user.role})`).join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 19\n            }, this)]\n          }, project._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No projects found\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"7f1ut14wEEuvHI9K7XhQyQCsxt4=\", false, function () {\n  return [useNavigate];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","api","IoIosDocument","jsxDEV","_jsxDEV","Project","_s","projects","setProjects","formData","setFormData","name","description","showAddProject","setShowAddProject","showAddUser","setShowAddUser","selectedProjectId","setSelectedProjectId","userData","setUserData","username","role","currentUser","setCurrentUser","navigate","fetchProjects","fetchCurrentUser","token","localStorage","getItem","response","get","headers","Authorization","data","err","console","error","alert","handleAddClick","handleUserAddClick","handleChange","e","target","value","handleUserChange","handleSubmit","preventDefault","post","handleUserSubmit","log","handleSelectProject","projectId","setItem","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","required","disabled","length","map","project","_id","users","user","join","_c","$RefreshReg$"],"sources":["C:/RBAC_APP/client/src/Pages/Main/Home.js"],"sourcesContent":["// import './Home.css';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import api from '../../api';\r\n// import { IoIosDocument } from 'react-icons/io'\r\n\r\n// const Project = () => {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [formData, setFormData] = useState({ name: '', description: '' });\r\n//   const [showAddProject, setShowAddProject] = useState(false);\r\n//   const [selectedProjectId, setSelectedProjectId] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n\r\n//   useEffect(() => {\r\n//     fetchProjects();\r\n//   }, []);\r\n\r\n//   const handleAddClick = () => {\r\n//     setShowAddProject(true);\r\n//   };\r\n\r\n//   const fetchProjects = async () => {\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//       try {\r\n//         const response = await api.get('/projects', { headers: { Authorization: `Bearer ${token}` } });\r\n//         console.log('Fetched projects:', response); // Debug log\r\n//         setProjects(response.data);\r\n//       } catch (err) {\r\n//         console.error('Error fetching projects:', err);\r\n//         alert('Error fetching projects. Please try again later.');\r\n//       }\r\n//     } else {\r\n//       alert('You must be logged in to view projects.');\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({\r\n//       ...formData,\r\n//       [e.target.name]: e.target.value,\r\n//     });\r\n//   };\r\n\r\n\r\n\r\n\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const token = localStorage.getItem('token');\r\n//     if (token) {\r\n//         try {\r\n//             const decodedToken = decodeToken(token);\r\n//             const userId = decodedToken.userId;\r\n\r\n//             const response = await api.post('/projects', { ...formData, userId }, { headers: { Authorization: `Bearer ${token}` } });\r\n//             alert('Project added successfully!');\r\n//             setFormData({ name: '', description: '' });\r\n//             fetchProjects();\r\n            \r\n//             // Store the new project ID in localStorage\r\n//             // const newProject = response.data;\r\n//             // localStorage.setItem('selectedProject', JSON.stringify(newProject));\r\n//         } catch (err) {\r\n//             console.error('Error adding project:', err);\r\n//             alert('Error adding project. Please check your input and try again.');\r\n//         }\r\n//     } else {\r\n//         alert('You must be logged in to add a project.');\r\n//     }\r\n// };\r\n\r\n\r\n\r\n//   // Function to decode the JWT token and extract userId\r\n//   const decodeToken = (token) => {\r\n//     // Ensure you handle token parsing securely\r\n//     const payload = token.split('.')[1];\r\n//     const decodedPayload = atob(payload);\r\n//     return JSON.parse(decodedPayload);\r\n//   };\r\n\r\n\r\n\r\n//   const handleSelectProject = (projectId) => {\r\n//     setSelectedProjectId(projectId);\r\n//     localStorage.setItem('selectedProject', projectId); // Store as string\r\n// };\r\n\r\n\r\n\r\n\r\n  \r\n\r\n//   return (\r\n\r\n//     <div className='main'>\r\n\r\n//       <Link to=\"/projects/document\"><IoIosDocument className='doc-icon' /></Link>\r\n\r\n//       <div className=\"projects-container\">\r\n//         <div className=\"projects-header\">\r\n//           <h1>Projects</h1>\r\n//           <button className=\"add-project-button\" onClick={handleAddClick}>\r\n//             Add Project\r\n//           </button>\r\n//         </div>\r\n//         {showAddProject && (\r\n//           <div className=\"projects-form-container\">\r\n//             <form onSubmit={handleSubmit} className=\"project-form\">\r\n//               <input\r\n//                 type=\"text\"\r\n//                 name=\"name\"\r\n//                 placeholder=\"Project Name\"\r\n//                 onChange={handleChange}\r\n//                 value={formData.name}\r\n//                 required\r\n//               />\r\n//               <textarea\r\n//                 name=\"description\"\r\n//                 placeholder=\"Project Description\"\r\n//                 onChange={handleChange}\r\n//                 value={formData.description}\r\n//               />\r\n//               <div className=\"form-buttons\">\r\n//                 <button type=\"submit\">Create</button>\r\n//                 <button type=\"button\" onClick={() => setShowAddProject(false)}>Cancel</button>\r\n//               </div>\r\n//             </form>\r\n//           </div>\r\n//         )}\r\n//         <div className=\"project-list-container\">\r\n//           <h2>Project List</h2>\r\n//           <ul>\r\n//             {projects.length > 0 ? (\r\n//               projects.map((project) => (\r\n//                 <li key={project._id}\r\n//                   className={`project-item ${selectedProjectId === project._id ? 'selected' : ''}`}\r\n//                   onClick={() => handleSelectProject(project._id)}>\r\n//                   <h3>{project.name}, {project._id}</h3>\r\n//                   <p>{project.description}</p>\r\n\r\n//                 </li>\r\n//               ))\r\n//             ) : (\r\n//               <p>No projects found</p>\r\n//             )}\r\n//           </ul>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n\r\n//   );\r\n// };\r\n\r\n// export default Project;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport './Home.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport api from '../../api';\r\nimport { IoIosDocument } from 'react-icons/io';\r\n\r\nconst Project = () => {\r\n  const [projects, setProjects] = useState([]);\r\n  const [formData, setFormData] = useState({ name: '', description: '' });\r\n  const [showAddProject, setShowAddProject] = useState(false);\r\n  const [showAddUser, setShowAddUser] = useState(false);\r\n  const [selectedProjectId, setSelectedProjectId] = useState(null);\r\n  const [userData, setUserData] = useState({ username: '', role: '' });\r\n  const [currentUser, setCurrentUser] = useState(null); // For managing user information\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchProjects();\r\n    fetchCurrentUser();\r\n  }, []);\r\n\r\n  const fetchProjects = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const response = await api.get('/projects', { headers: { Authorization: `Bearer ${token}` } });\r\n        setProjects(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching projects:', err);\r\n        alert('Error fetching projects. Please try again later.');\r\n      }\r\n    } else {\r\n      alert('You must be logged in to view projects.');\r\n    }\r\n  };\r\n\r\n  const fetchCurrentUser = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const response = await api.get('/users/me', { headers: { Authorization: `Bearer ${token}` } });\r\n        setCurrentUser(response.data);\r\n      } catch (err) {\r\n        console.error('Error fetching user information:', err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setShowAddProject(true);\r\n  };\r\n\r\n  const handleUserAddClick = () => {\r\n    setShowAddUser(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    setUserData({\r\n      ...userData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const response = await api.post('/projects', { ...formData }, { headers: { Authorization: `Bearer ${token}` } });\r\n        alert('Project added successfully!');\r\n        setFormData({ name: '', description: '' });\r\n        fetchProjects();\r\n        setShowAddProject(false);\r\n      } catch (err) {\r\n        console.error('Error adding project:', err);\r\n        alert('Error adding project. Please check your input and try again.');\r\n      }\r\n    } else {\r\n      alert('You must be logged in to add a project.');\r\n    }\r\n  };\r\n\r\n  const handleUserSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const token = localStorage.getItem('token');\r\n    if (token && selectedProjectId) {\r\n      try {\r\n        const response = await api.post(`/projects/${selectedProjectId}/users`, {\r\n          username: userData.username,\r\n          role: userData.role\r\n        });\r\n        console.log('User added successfully:', response.data);        alert('User added to project successfully!');\r\n        setUserData({ username: '', role: '' });\r\n        fetchProjects();\r\n        setShowAddUser(false);\r\n        console.log('Submitting user data:', userData);\r\n\r\n      } catch (err) {\r\n        console.error('Error adding user to project:', err);\r\n        alert('Error adding user. Please check your input and try again.');\r\n      }\r\n    } else {\r\n      alert('You must be logged in and a project must be selected to add users.');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleSelectProject = (projectId) => {\r\n    setSelectedProjectId(projectId);\r\n    localStorage.setItem('selectedProject', projectId); // Store as string\r\n  };\r\n\r\n  return (\r\n    <div className='main'>\r\n      <Link to=\"/projects/document\"><IoIosDocument className='doc-icon' /></Link>\r\n\r\n      <div className=\"projects-container\">\r\n        <div className=\"projects-header\">\r\n          <h1>Projects</h1>\r\n          <button className=\"add-project-button\" onClick={handleAddClick}>\r\n            Add Project\r\n          </button>\r\n          <button className=\"add-user-button\" onClick={handleUserAddClick}>\r\n            Add User to Project\r\n          </button>\r\n        </div>\r\n        {showAddProject && (\r\n          <div className=\"projects-form-container\">\r\n            <form onSubmit={handleSubmit} className=\"project-form\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Project Name\"\r\n                onChange={handleChange}\r\n                value={formData.name}\r\n                required\r\n              />\r\n              <textarea\r\n                name=\"description\"\r\n                placeholder=\"Project Description\"\r\n                onChange={handleChange}\r\n                value={formData.description}\r\n              />\r\n              <div className=\"form-buttons\">\r\n                <button type=\"submit\">Create</button>\r\n                <button type=\"button\" onClick={() => setShowAddProject(false)}>Cancel</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n        {showAddUser && (\r\n          <div className=\"add-user-form-container\">\r\n            <form onSubmit={handleUserSubmit} className=\"user-form\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                onChange={handleUserChange}\r\n                value={userData.username}\r\n                required\r\n              />\r\n              <select\r\n                name=\"role\"\r\n                onChange={handleUserChange}\r\n                value={userData.role}\r\n                required\r\n              >\r\n                <option value=\"\" disabled>Select Role</option>\r\n                <option value=\"admin\">Admin</option>\r\n                <option value=\"editor\">Editor</option>\r\n                <option value=\"viewer\">Viewer</option>\r\n              </select>\r\n              <div className=\"form-buttons\">\r\n                <button type=\"submit\">Add User</button>\r\n                <button type=\"button\" onClick={() => setShowAddUser(false)}>Cancel</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )}\r\n        <div className=\"project-list-container\">\r\n          <h2>Project List</h2>\r\n          <ul>\r\n            {projects.length > 0 ? (\r\n              projects.map((project) => (\r\n                <li key={project._id}\r\n                    className={`project-item ${selectedProjectId === project._id ? 'selected' : ''}`}\r\n                    onClick={() => handleSelectProject(project._id)}>\r\n                  <h3>{project.name}</h3>\r\n                  <p>{project.description}</p>\r\n                  <p>Users: {project.users.map(user => `${user.username} (${user.role})`).join(', ')}</p>\r\n                </li>\r\n              ))\r\n            ) : (\r\n              <p>No projects found</p>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAOA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAsBA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,GAAG,MAAM,WAAW;AAC3B,SAASC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EACvE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC;IAAEuB,QAAQ,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACpE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACtD,MAAM2B,QAAQ,GAAGzB,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd6B,aAAa,CAAC,CAAC;IACfC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAME,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAM9B,GAAG,CAAC+B,GAAG,CAAC,WAAW,EAAE;UAAEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAAE,CAAC,CAAC;QAC9FpB,WAAW,CAACuB,QAAQ,CAACI,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;QAC9CG,KAAK,CAAC,kDAAkD,CAAC;MAC3D;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,MAAMZ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAM9B,GAAG,CAAC+B,GAAG,CAAC,WAAW,EAAE;UAAEC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAAE,CAAC,CAAC;QAC9FJ,cAAc,CAACO,QAAQ,CAACI,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,kCAAkC,EAAEF,GAAG,CAAC;MACxD;IACF;EACF,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3B1B,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAM2B,kBAAkB,GAAGA,CAAA,KAAM;IAC/BzB,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM0B,YAAY,GAAIC,CAAC,IAAK;IAC1BjC,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACkC,CAAC,CAACC,MAAM,CAACjC,IAAI,GAAGgC,CAAC,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,gBAAgB,GAAIH,CAAC,IAAK;IAC9BvB,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACwB,CAAC,CAACC,MAAM,CAACjC,IAAI,GAAGgC,CAAC,CAACC,MAAM,CAACC;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAM9B,GAAG,CAACgD,IAAI,CAAC,WAAW,EAAE;UAAE,GAAGxC;QAAS,CAAC,EAAE;UAAEwB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAAE,CAAC,CAAC;QAChHW,KAAK,CAAC,6BAA6B,CAAC;QACpC7B,WAAW,CAAC;UAAEC,IAAI,EAAE,EAAE;UAAEC,WAAW,EAAE;QAAG,CAAC,CAAC;QAC1Cc,aAAa,CAAC,CAAC;QACfZ,iBAAiB,CAAC,KAAK,CAAC;MAC1B,CAAC,CAAC,OAAOsB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEF,GAAG,CAAC;QAC3CG,KAAK,CAAC,8DAA8D,CAAC;MACvE;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC;EAED,MAAMW,gBAAgB,GAAG,MAAOP,CAAC,IAAK;IACpCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMpB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,IAAIX,iBAAiB,EAAE;MAC9B,IAAI;QACF,MAAMc,QAAQ,GAAG,MAAM9B,GAAG,CAACgD,IAAI,CAAC,aAAahC,iBAAiB,QAAQ,EAAE;UACtEI,QAAQ,EAAEF,QAAQ,CAACE,QAAQ;UAC3BC,IAAI,EAAEH,QAAQ,CAACG;QACjB,CAAC,CAAC;QACFe,OAAO,CAACc,GAAG,CAAC,0BAA0B,EAAEpB,QAAQ,CAACI,IAAI,CAAC;QAASI,KAAK,CAAC,qCAAqC,CAAC;QAC3GnB,WAAW,CAAC;UAAEC,QAAQ,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAC,CAAC;QACvCI,aAAa,CAAC,CAAC;QACfV,cAAc,CAAC,KAAK,CAAC;QACrBqB,OAAO,CAACc,GAAG,CAAC,uBAAuB,EAAEhC,QAAQ,CAAC;MAEhD,CAAC,CAAC,OAAOiB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC;QACnDG,KAAK,CAAC,2DAA2D,CAAC;MACpE;IACF,CAAC,MAAM;MACLA,KAAK,CAAC,oEAAoE,CAAC;IAC7E;EACF,CAAC;EAID,MAAMa,mBAAmB,GAAIC,SAAS,IAAK;IACzCnC,oBAAoB,CAACmC,SAAS,CAAC;IAC/BxB,YAAY,CAACyB,OAAO,CAAC,iBAAiB,EAAED,SAAS,CAAC,CAAC,CAAC;EACtD,CAAC;EAED,oBACEjD,OAAA;IAAKmD,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBpD,OAAA,CAACL,IAAI;MAAC0D,EAAE,EAAC,oBAAoB;MAAAD,QAAA,eAACpD,OAAA,CAACF,aAAa;QAACqD,SAAS,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAE3EzD,OAAA;MAAKmD,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACjCpD,OAAA;QAAKmD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BpD,OAAA;UAAAoD,QAAA,EAAI;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBzD,OAAA;UAAQmD,SAAS,EAAC,oBAAoB;UAACO,OAAO,EAAEtB,cAAe;UAAAgB,QAAA,EAAC;QAEhE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTzD,OAAA;UAAQmD,SAAS,EAAC,iBAAiB;UAACO,OAAO,EAAErB,kBAAmB;UAAAe,QAAA,EAAC;QAEjE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLhD,cAAc,iBACbT,OAAA;QAAKmD,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtCpD,OAAA;UAAM2D,QAAQ,EAAEhB,YAAa;UAACQ,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACpDpD,OAAA;YACE4D,IAAI,EAAC,MAAM;YACXrD,IAAI,EAAC,MAAM;YACXsD,WAAW,EAAC,cAAc;YAC1BC,QAAQ,EAAExB,YAAa;YACvBG,KAAK,EAAEpC,QAAQ,CAACE,IAAK;YACrBwD,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFzD,OAAA;YACEO,IAAI,EAAC,aAAa;YAClBsD,WAAW,EAAC,qBAAqB;YACjCC,QAAQ,EAAExB,YAAa;YACvBG,KAAK,EAAEpC,QAAQ,CAACG;UAAY;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFzD,OAAA;YAAKmD,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BpD,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAAAR,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACrCzD,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAACF,OAAO,EAAEA,CAAA,KAAMhD,iBAAiB,CAAC,KAAK,CAAE;cAAA0C,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN,EACA9C,WAAW,iBACVX,OAAA;QAAKmD,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtCpD,OAAA;UAAM2D,QAAQ,EAAEb,gBAAiB;UAACK,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACrDpD,OAAA;YACE4D,IAAI,EAAC,MAAM;YACXrD,IAAI,EAAC,UAAU;YACfsD,WAAW,EAAC,UAAU;YACtBC,QAAQ,EAAEpB,gBAAiB;YAC3BD,KAAK,EAAE1B,QAAQ,CAACE,QAAS;YACzB8C,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFzD,OAAA;YACEO,IAAI,EAAC,MAAM;YACXuD,QAAQ,EAAEpB,gBAAiB;YAC3BD,KAAK,EAAE1B,QAAQ,CAACG,IAAK;YACrB6C,QAAQ;YAAAX,QAAA,gBAERpD,OAAA;cAAQyC,KAAK,EAAC,EAAE;cAACuB,QAAQ;cAAAZ,QAAA,EAAC;YAAW;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9CzD,OAAA;cAAQyC,KAAK,EAAC,OAAO;cAAAW,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACpCzD,OAAA;cAAQyC,KAAK,EAAC,QAAQ;cAAAW,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACtCzD,OAAA;cAAQyC,KAAK,EAAC,QAAQ;cAAAW,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC,eACTzD,OAAA;YAAKmD,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BpD,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAAAR,QAAA,EAAC;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvCzD,OAAA;cAAQ4D,IAAI,EAAC,QAAQ;cAACF,OAAO,EAAEA,CAAA,KAAM9C,cAAc,CAAC,KAAK,CAAE;cAAAwC,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CACN,eACDzD,OAAA;QAAKmD,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrCpD,OAAA;UAAAoD,QAAA,EAAI;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBzD,OAAA;UAAAoD,QAAA,EACGjD,QAAQ,CAAC8D,MAAM,GAAG,CAAC,GAClB9D,QAAQ,CAAC+D,GAAG,CAAEC,OAAO,iBACnBnE,OAAA;YACImD,SAAS,EAAE,gBAAgBtC,iBAAiB,KAAKsD,OAAO,CAACC,GAAG,GAAG,UAAU,GAAG,EAAE,EAAG;YACjFV,OAAO,EAAEA,CAAA,KAAMV,mBAAmB,CAACmB,OAAO,CAACC,GAAG,CAAE;YAAAhB,QAAA,gBAClDpD,OAAA;cAAAoD,QAAA,EAAKe,OAAO,CAAC5D;YAAI;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBzD,OAAA;cAAAoD,QAAA,EAAIe,OAAO,CAAC3D;YAAW;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC5BzD,OAAA;cAAAoD,QAAA,GAAG,SAAO,EAACe,OAAO,CAACE,KAAK,CAACH,GAAG,CAACI,IAAI,IAAI,GAAGA,IAAI,CAACrD,QAAQ,KAAKqD,IAAI,CAACpD,IAAI,GAAG,CAAC,CAACqD,IAAI,CAAC,IAAI,CAAC;YAAA;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GALhFU,OAAO,CAACC,GAAG;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMhB,CACL,CAAC,gBAEFzD,OAAA;YAAAoD,QAAA,EAAG;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QACxB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvD,EAAA,CA1MID,OAAO;EAAA,QAQML,WAAW;AAAA;AAAA4E,EAAA,GARxBvE,OAAO;AA4Mb,eAAeA,OAAO;AAAC,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}